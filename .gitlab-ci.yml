stages:
  - build
  - deploy

build:
  stage: build
  image: maven:latest
  script:
    - mvn clean package
  artifacts:
    paths:
      - target/*.jar

deploy:
  stage: deploy
  image: amazon/aws-cli:latest
  script:
    - apt-get update && apt-get install -y unzip
    - apt-get update && apt-get install -y curl
    - aws configure set aws_access_key_id AKIAV4YTWNKPKD6RT6WF
    - aws configure set aws_secret_access_key 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
    - aws configure set region sa-east-1
    - unzip target/artifacts.zip -d target/
    - aws s3 cp https://gitlab.ctd.academy/ctd/brasil/projeto-integrador-1/0523/grupo-2/-/jobs/111939/artifacts/file/target/demo-0.0.1-SNAPSHOT.jar s3://bucket-gp2/
    - aws deploy create-deployment --region sa-east-1 --application-name odecasa-dev --deployment-group-name back --s3-location bucket=bucket-gp2,key=demo-0.0.1-SNAPSHOT.jar,bundleType=tar

docker_deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker pull tomcat:9-jdk11-openjdk-slim
    - docker run -d -p 8080:8080 --name tomcat_container tomcat:9-jdk11-openjdk-slim
    - docker cp target/*.jar tomcat_container:/usr/local/tomcat/webapps/
    - docker exec tomcat_container catalina.sh run
