{
	"info": {
		"_postman_id": "ff1f3d2e-0fe7-4ce2-a6e7-526c2ac55b16",
		"name": "Produto",
		"description": "Conjunto de requisições de exemplos para interação com a API de produto.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23242094",
		"_collection_link": "https://martian-flare-109998.postman.co/workspace/8360a2d3-2759-482f-8607-660be5e0f1b9/collection/23242094-ff1f3d2e-0fe7-4ce2-a6e7-526c2ac55b16?action=share&creator=23242094&source=collection_link"
	},
	"item": [
		{
			"name": "Buscar todos",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/produto",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"produto"
					]
				},
				"description": "Retorna uma lista com todos os produtos presentes no banco.\n\nNão requer autenticação\n\nNão requer função."
			},
			"response": []
		},
		{
			"name": "Salvar produto",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Che Lagarto\",\r\n  \"descricao\": \"Uma das maiores redes de Hos.\",\r\n  \"qualificacao\":3,\r\n  \"titulo\":\"titulo maneiro\",\r\n  \"imagemList\": [\r\n    {\r\n      \"titulo\": \"img01\",\r\n      \"url\": \"https://s2.glbimg.com/ddiFM5kKRjC1Ucdx9RPlciGl9BA=/e.glbimg.com/og/ed/f/original/2018/11/22/gettyimages-968913780.jpg\"\r\n    },\r\n    {\r\n      \"titulo\": \"img02\",\r\n      \"url\": \"https://s2.glbimg.com/ddiFM5kKRjC1Ucdx9RPlciGl9BA=/e.glbimg.com/og/ed/f/original/2018/11/22/gettyimages-968913780.jpg\"\r\n    },\r\n    {\r\n      \"titulo\": \"img02\",\r\n      \"url\": \"https://s2.glbimg.com/ddiFM5kKRjC1Ucdx9RPlciGl9BA=/e.glbimg.com/og/ed/f/original/2018/11/22/gettyimages-968913780.jpg\"\r\n    }\r\n  ],\r\n  \"categoria\": {\r\n    \"id\": 1\r\n    },\r\n  \"cidade\": {\r\n    \"id\": 1\r\n    },\r\n  \"caracteristicaList\": [\r\n    {\r\n      \"nome\": \"Wi-Fi\",\r\n      \"icone\": \"wifi\"\r\n    },\r\n    {\r\n      \"nome\": \"Cozinha\",\r\n      \"icone\": \"kitchen\"\r\n    },\r\n    {\r\n      \"nome\": \"Televisão\",\r\n      \"icone\": \"tv\"\r\n    },\r\n    {\r\n      \"nome\": \"Ar-condicionado\",\r\n      \"icone\": \"ac_unit\"\r\n    },\r\n    {\r\n      \"nome\": \"Piscina\",\r\n      \"icone\": \"pool\"\r\n    },\r\n    {\r\n      \"nome\": \"Aceitas Pets\",\r\n      \"icone\": \"pets\"\r\n    },\r\n    {\r\n      \"nome\": \"Estacionamento\",\r\n      \"icone\": \"local_parking\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/produto",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"produto"
					]
				},
				"description": "Salva o produto passado com parâmetro no body.\n\nTodos os campos do exemplo são necessários.\n\nNão passe ID se for criar um produto novo. Não passe ID se for criar uma imagem nova. Não passe ID se for criar uma característica nova.\n\nO ID de categoria e cidade é obrigatório. É necessário criá-los previamente.\n\nAtente-se a estrutura do body.\n\n| **Retorno** | **Código** |\n| --- | --- |\n| Um objeto produto com ID e IDs para imagens e características. | 201 |\n| O produto não foi criado | 400 |"
			},
			"response": []
		},
		{
			"name": "find ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/produto/findById?id=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"produto",
						"findById"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				},
				"description": "Não requer autenticação\n\nNão requer função.\n\nRetorna um objeto do tipo produto correspondente ao ID passado.\n\nCaso encontre, retorna a lista de produtos e código 200.\n\nCaso não encontre o ID, retorna 404, NOT_FOUND."
			},
			"response": []
		},
		{
			"name": "Buscar por categoria",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/produto/findByCategoria?id=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"produto",
						"findByCategoria"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				},
				"description": "Não requer autenticação\n\nNão requer função.\n\nRetorna uma lista de objetos do tipo produto correspondente a categoria passada e código 200.\n\nCaso encontre, retorna a lista de produtos e código 200.\n\nCaso não encontre nada, retorna 404, NOT_FOUND."
			},
			"response": []
		},
		{
			"name": "Buscar por cidade",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/produto/findByCidade?id=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"produto",
						"findByCidade"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				},
				"description": "Não requer autenticação\n\nNão requer função.\n\nRetorna uma lista de objetos do tipo produto correspondente a cidade passada e código 200.\n\nCaso encontre, retorna a lista de produtos e código 200.\n\nCaso não encontre nada, retorna 404, NOT_FOUND."
			},
			"response": []
		}
	]
}